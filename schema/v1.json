{"$schema":"https://json-schema.org/draft/2020-12/schema","$id":"https://github.com/SENERGY-Platform/mgw-modfile-lib/v1/model/mod-file","$ref":"#/$defs/ModFile","$defs":{"AuxService":{"properties":{"name":{"type":"string","description":"service name"},"runConfig":{"$ref":"#/$defs/RunConfig","description":"configurations for running the service container (e.g. restart strategy, stop timeout, ...)"},"include":{"items":{"$ref":"#/$defs/BindMount"},"type":"array","description":"files or dictionaries to be mounted from module repository"},"tmpfs":{"items":{"$ref":"#/$defs/TmpfsMount"},"type":"array","description":"temporary file systems (in memory) required by the service"}},"additionalProperties":false,"type":"object","required":["name"]},"BindMount":{"properties":{"mountPoint":{"type":"string","description":"absolute path in container"},"source":{"type":"string","description":"relative path in module repo"},"readOnly":{"type":"boolean"}},"additionalProperties":false,"type":"object","required":["mountPoint","source"]},"ConfigTarget":{"properties":{"refVar":{"type":"string","description":"container environment variable to hold the configuration value"},"services":{"items":{"type":"string"},"type":"array","description":"service identifiers as used in ModFile.Services to map the reference variable to a number of services"},"auxServices":{"items":{"type":"string"},"type":"array","description":"aux service identifiers as used in ModFile.AuxServices to map the reference variable to a number of services"}},"additionalProperties":false,"type":"object","required":["refVar"]},"ConfigUserInput":{"properties":{"name":{"type":"string","description":"input name (e.g. used as a label for input field)"},"description":{"type":"string","description":"short text describing the input"},"group":{"type":"string","description":"group identifier as used in ModFile.InputGroups to assign the user input to an input group"},"type":{"type":"string","enum":["text","number"],"description":"type of the configuration value (e.g. text, number, date, ...)"},"typeOptions":{"type":"object","description":"type specific options (e.g. number supports min, max values or step)"}},"additionalProperties":false,"type":"object","required":["name","type"]},"ConfigValue":{"properties":{"value":{"oneOf":[{"type":"string"},{"type":"number"},{"type":"boolean"},{"type":"array"}],"description":"default configuration value or nil"},"options":{"items":true,"type":"array","description":"list of possible configuration values"},"optionsExt":{"type":"boolean","description":"if true a value not defined in options can be set (only required if options are provided)"},"dataType":{"type":"string","enum":["string","float","int","bool"],"description":"data type of the configuration value (e.g. string, int, ...) (defaults to \"string\" if nil)"},"isList":{"type":"boolean","description":"set to true if multiple configuration values are required"},"delimiter":{"type":"string","description":"delimiter to be used for marshalling multiple configuration values (defaults to \",\" if nil)"},"userInput":{"$ref":"#/$defs/ConfigUserInput","description":"meta info for user input via gui (if nil a default value must be set)"},"targets":{"items":{"$ref":"#/$defs/ConfigTarget"},"type":"array","description":"reference variables for the configuration value"},"optional":{"type":"boolean"}},"additionalProperties":false,"type":"object"},"DependencyTarget":{"properties":{"refVar":{"type":"string","description":"container environment variable to hold the addressable reference of the service"},"template":{"type":"string","description":"string with '{ref}' placeholder if additional information is required (e.g. http://{ref}/api)"},"services":{"items":{"type":"string"},"type":"array","description":"service identifiers as used in ModFile.Services to map the reference variable to a number of services"},"auxServices":{"items":{"type":"string"},"type":"array","description":"aux service identifiers as used in ModFile.AuxServices to map the reference variable to a number of services"}},"additionalProperties":false,"type":"object","required":["refVar"]},"HostResource":{"properties":{"tags":{"items":{"type":"string"},"type":"array","description":"tags for aiding resource identification (e.g. a vendor), unique type and tag combinations can be used to select resources without requiring user interaction"},"userInput":{"$ref":"#/$defs/UserInput","description":"meta info for user input via gui (if nil and not optional the tag combination must yield a unique resource)"},"optional":{"type":"boolean"},"targets":{"items":{"$ref":"#/$defs/HostResourceTarget"},"type":"array","description":"mount points for the resource"}},"additionalProperties":false,"type":"object","required":["targets"]},"HostResourceTarget":{"properties":{"mountPoint":{"type":"string","description":"absolute path in container"},"services":{"items":{"type":"string"},"type":"array","description":"service identifiers as used in ModFile.Services to map the mount point to a number of services"},"readOnly":{"type":"boolean","description":"if true resource will be mounted as read only"}},"additionalProperties":false,"type":"object","required":["mountPoint","services"]},"HttpEndpoint":{"properties":{"name":{"type":"string","description":"endpoint name"},"path":{"type":"string","description":"internal endpoint path"},"port":{"type":"integer","description":"port the service is listening on (set if not 80)"},"extPath":{"type":"string","description":"external path to be used by the api gateway"}},"additionalProperties":false,"type":"object","required":["name","extPath"]},"InputGroup":{"properties":{"name":{"type":"string","description":"input group name"},"description":{"type":"string","description":"short text describing the input group"},"group":{"type":"string","description":"group identifier as used in ModFile.InputGroups to assign the input group to a parent group"}},"additionalProperties":false,"type":"object","required":["name"]},"ModFile":{"properties":{"modfileVersion":{"type":"string"},"id":{"type":"string","description":"url without schema (e.g. github.com/user/repo)"},"name":{"type":"string","description":"module name"},"description":{"type":"string","description":"short text describing the module"},"tags":{"items":{"type":"string"},"type":"array","description":"module tags"},"license":{"type":"string","description":"module license name (e.g. Apache License 2.0)"},"author":{"type":"string","description":"module author"},"version":{"type":"string","description":"module version (must be prefixed with 'v' and adhere to the semantic versioning guidelines, see https://semver.org/ for details)"},"type":{"type":"string","enum":["add-on","device-connector"],"description":"module type (e.g. device-connector specifies a module for integrating devices)"},"deploymentType":{"type":"string","enum":["single","multiple"],"description":"specifies whether a module can only be deployed once or multiple times"},"architectures":{"items":{"type":"string","enum":["x86","i386","x86_64","amd64","aarch32","arm32v5","arm32v6","arm32v7","aarch64","arm64v8"]},"type":"array","description":"supported cpu architectures"},"services":{"patternProperties":{".*":{"$ref":"#/$defs/Service"}},"type":"object","description":"map depicting the services the module consists of (keys serve as unique identifiers and can be reused elsewhere in the modfile to reference a service)"},"auxServices":{"patternProperties":{".*":{"$ref":"#/$defs/AuxService"}},"type":"object","description":"map containing auxiliary services that can be deployed by module services (keys serve as unique identifiers and can be reused elsewhere in the modfile to reference an aux service)"},"auxImageSources":{"items":{"type":"string"},"type":"array","description":"list of image sources for aux services (e.g. ghcr.io/senergy-platform/*)"},"serviceReferences":{"patternProperties":{".*":{"items":{"$ref":"#/$defs/DependencyTarget"},"type":"array"}},"type":"object","description":"map linking module services to reference variables (identifiers as defined in ModFile.Services serve as keys)"},"volumes":{"patternProperties":{".*":{"items":{"$ref":"#/$defs/VolumeTarget"},"type":"array"}},"type":"object","description":"map linking volumes to mount points (keys represent volume names)"},"dependencies":{"patternProperties":{".*":{"$ref":"#/$defs/ModuleDependency"}},"type":"object","description":"external modules required by the module (keys represent module IDs)"},"hostResources":{"patternProperties":{".*":{"$ref":"#/$defs/HostResource"}},"type":"object","description":"host resources required by services (e.g. devices, sockets, ...)"},"secrets":{"patternProperties":{".*":{"$ref":"#/$defs/Secret"}},"type":"object","description":"secrets required by services (e.g. certs, keys, ...)"},"configs":{"patternProperties":{".*":{"$ref":"#/$defs/ConfigValue"}},"type":"object","description":"configuration values required by services"},"inputGroups":{"patternProperties":{".*":{"$ref":"#/$defs/InputGroup"}},"type":"object","description":"map of groups for categorising user inputs (keys serve as unique identifiers and can be reused elsewhere in the modfile to reference a group)"}},"additionalProperties":false,"type":"object","required":["modfileVersion","id","name","version","type","deploymentType","services"]},"ModuleDependency":{"properties":{"version":{"type":"string","description":"version of required module (e.g. =v1.0.2, \u003ev1.0.2., \u003e=v1.0.2, \u003ev1.0.2;\u003cv2.1.3, ...)"},"requiredServices":{"patternProperties":{".*":{"items":{"$ref":"#/$defs/DependencyTarget"},"type":"array"}},"type":"object","description":"map linking required services to reference variables (identifiers as defined in ModFile.Services of the required module are used as keys)"}},"additionalProperties":false,"type":"object","required":["version","requiredServices"]},"RunConfig":{"properties":{"maxRetries":{"type":"integer","description":"defaults to 5 if nil"},"runOnce":{"type":"boolean"},"stopTimeout":{"type":"integer","description":"defaults to 5s if nil"},"stopSignal":{"type":"string"},"pseudoTTY":{"type":"boolean"}},"additionalProperties":false,"type":"object"},"Secret":{"properties":{"tags":{"items":{"type":"string"},"type":"array","description":"tags for aiding resource identification (e.g. a vendor), unique type and tag combinations can be used to select resources without requiring user interaction"},"userInput":{"$ref":"#/$defs/UserInput","description":"meta info for user input via gui (if nil and not optional the tag combination must yield a unique resource)"},"optional":{"type":"boolean"},"type":{"type":"string","enum":["certificate","basic-auth","api-key","client-id","private-key"],"description":"resource type as defined by external services managing resources (e.g. api-key, certificate, ...)"},"targets":{"items":{"$ref":"#/$defs/SecretTarget"},"type":"array","description":"mount points or environment variables for the secret"}},"additionalProperties":false,"type":"object","required":["type","targets"]},"SecretTarget":{"properties":{"mountPoint":{"type":"string","description":"absolute path in container"},"refVar":{"type":"string","description":"container environment variable to hold the secret value"},"item":{"type":"string","description":"optional item reference as defined by the secret type"},"services":{"items":{"type":"string"},"type":"array","description":"service identifiers as used in ModFile.Services to map the mount point to a number of services"}},"additionalProperties":false,"type":"object","required":["services"]},"Service":{"properties":{"name":{"type":"string","description":"service name"},"image":{"type":"string","description":"container image (must be versioned via tag or digest, e.g. srv-image:v1.0.0)"},"runConfig":{"$ref":"#/$defs/RunConfig","description":"configurations for running the service container (e.g. restart strategy, stop timeout, ...)"},"include":{"items":{"$ref":"#/$defs/BindMount"},"type":"array","description":"files or dictionaries to be mounted from module repository"},"tmpfs":{"items":{"$ref":"#/$defs/TmpfsMount"},"type":"array","description":"temporary file systems (in memory) required by the service"},"httpEndpoints":{"items":{"$ref":"#/$defs/HttpEndpoint"},"type":"array","description":"http endpoints of the service to be exposed via the api gateway"},"ports":{"items":{"$ref":"#/$defs/SrvPort"},"type":"array","description":"service ports to be published on the host"},"requiredServices":{"items":{"type":"string"},"type":"array","description":"identifiers of internal services that must be running before this service is started"}},"additionalProperties":false,"type":"object","required":["name","image"]},"SrvPort":{"properties":{"name":{"type":"string","description":"port name"},"port":{"oneOf":[{"type":"string"},{"type":"integer"}],"description":"port number or port range (e.g. 8080-8081)"},"hostPort":{"oneOf":[{"type":"string"},{"type":"integer"}],"description":"port number or port range (e.g. 8080-8081), can be overridden during deployment to avoid collisions (arbitrary ports are used if nil)"},"protocol":{"type":"string","enum":["tcp","udp"],"description":"specify port protocol (defaults to tcp if nil)"}},"additionalProperties":false,"type":"object","required":["port"]},"TmpfsMount":{"properties":{"mountPoint":{"type":"string","description":"absolute path in container"},"size":{"type":"integer","description":"tmpfs size in bytes provided as integer or in human-readable form (e.g. 64Mb)"},"mode":{"type":"integer","description":"linux file mode to be used for the tmpfs provided as string (e.g. 777, 0777; defaults to 770 if nil)"}},"additionalProperties":false,"type":"object","required":["mountPoint","size"]},"UserInput":{"properties":{"name":{"type":"string","description":"input name (e.g. used as a label for input field)"},"description":{"type":"string","description":"short text describing the input"},"group":{"type":"string","description":"group identifier as used in ModFile.InputGroups to assign the user input to an input group"}},"additionalProperties":false,"type":"object","required":["name"]},"VolumeTarget":{"properties":{"mountPoint":{"type":"string","description":"absolute path in container"},"services":{"items":{"type":"string"},"type":"array","description":"service identifiers as used in ModFile.Services to map the mount point to a number of services"},"auxServices":{"items":{"type":"string"},"type":"array","description":"aux service identifiers as used in ModFile.AuxServices to map the mount point to a number of services"}},"additionalProperties":false,"type":"object","required":["mountPoint"]}}}